paths:
  /flashcards/create:
    # [POST] Create flashcard
    post:
      tags:
        - flashcards
      summary: Create flashcard
      parameters:
        - name: body
          in: body
          description: Create flashcards
          required: true
          schema:
            $ref: '#/definitions/createFlashcard'
      responses:
        201:
          description: 'Created'
          content:
            application/json:
              schema:
                $ref: '#/responses/flashcard'
        400:
          description: 'Bad Request'
        401:
          description: 'Unauthorized'
        403:
          description: 'Forbidden'
        500:
          description: 'Server Error'
  /flashcards/list/{listID}:
    # [GET] Get list of flashcards
    get:
      tags:
        - flashcards
      summary: Get list of flashcards
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: skip
          schema:
            type: integer
        - in: query
          name: sort
          schema:
            type: string
        - in: query
          name: sortBy
          schema:
            type: string
        - in: query
          name: forwardText
          schema:
            type: string
        - in: query
          name: backwardText
          schema:
            type: string
      responses:
        200:
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/responses/flashcardsList'
        400:
          description: 'Bad Request'
        401:
          description: 'Unauthorized'
        403:
          description: 'Forbidden'
        404:
          description: 'Not Found'
        500:
          description: 'Server Error'

# definitions
definitions:
  createFlashcard:
    type: object
    required:
      - forwardText
      - backwardText
      - listIDs
    properties:
      forwardText:
        type: string
      backwardText:
        type: string
      listIDs:
        type: array
        items:
          type: string

responses:
  flashcard:
    type: object
    properties:
      _id:
        type: string
      forwardText:
        type: string
      backwardText:
        type: string
      userID:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      __v:
        type: integer
  flashcardsList:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          properties:
            _id:
              type: string
            forwardText:
              type: string
            backwardText:
              type: string
            userID:
              type: string
            createdAt:
              type: string
            updatedAt:
              type: string
            __v:
              type: integer
      count:
        type: integer
      skip:
        type: integer
      limit:
        type: integer

schemes:
  - https
  - http
