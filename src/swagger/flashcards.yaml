paths:
  /flashcards/{listID}:
    # [GET] Get list of flashcards
    get:
      tags:
        - flashcards
      summary: Get list of flashcards
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: skip
          schema:
            type: integer
        - in: query
          name: sort
          schema:
            type: string
        - in: query
          name: sortBy
          schema:
            type: string
        - in: query
          name: listID
          schema:
            type: string
      responses:
        200:
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/responses/getFlashcards'
        400:
          description: 'Bad Request'
        401:
          description: 'Unauthorized'
        403:
          description: 'Forbidden'
        404:
          description: 'Not Found'
        500:
          description: 'Server Error'

  /flashcards/delete/list/{listID}/flashcard/{flashcardID}:
    # [DELETE] Remove flashcard from list
    delete:
      tags:
        - flashcards
      summary: Remove flashcard from list
      parameters:
        - in: query
          name: listID
          schema:
            type: string
          required: true
        - in: query
          name: flashcardID
          schema:
            type: string
          required: true
      responses:
        204:
          description: 'OK'
        400:
          description: 'Bad Request'
        401:
          description: 'Unauthorized'
        403:
          description: 'Forbidden'
        404:
          description: 'Not Found'
        500:
          description: 'Server Error'

  /flashcards/create:
    # [POST] Create flashcard
    post:
      tags:
        - flashcards
      summary: Create flashcard
      parameters:
        - name: body
          in: body
          description: Create flashcards
          required: true
          schema:
            $ref: '#/definitions/createFlashcard'
      responses:
        201:
          description: 'Created'
          content:
            application/json:
              schema:
                $ref: '#/responses/flashcard'
        400:
          description: 'Bad Request'
        401:
          description: 'Unauthorized'
        403:
          description: 'Forbidden'
        500:
          description: 'Server Error'

# definitions
definitions:
  createFlashcard:
    type: object
    required:
      - forwardText
      - backwardText
      - listIDs
    properties:
      forwardText:
        type: string
      backwardText:
        type: string
      listIDs:
        type: array
        items:
          type: string

responses:
  flashcard:
    type: object
    properties:
      _id:
        type: string
      forwardText:
        type: string
      backwardText:
        type: string
      userID:
        type: string
      createdAt:
        type: string
      updatedAt:
        type: string
      __v:
        type: integer
  getFlashcards:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/responses/flashcard'
      count:
        type: integer
      skip:
        type: integer
      limit:
        type: integer

schemes:
  - https
  - http
